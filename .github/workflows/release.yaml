name: Publish Container Images

on:
  push:
    tags:
      - 'v*.*.*'
  pull_request:

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3

      - name: Prepare additional Metadata
        id: addtional_meta
        run: |
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

      - name: Prepare Image Metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/radiorabe/nowplaying
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
          labels: |
            name=${{ github.event.repository.name }}
            summary=${{ github.event.repository.description }}
            description=The RaBe nowplaying daemon is used to send ticker information for several broadcast vectors.
            url=${{ github.event.repository.html_url }}
            vcs-ref=${{ github.sha }}
            revision=${{ github.sha }}
            release=${{ github.sha }}
            build-date=${{ steps.addtional_meta.outputs.created }}
            io.k8s.display-name=${{ github.event.repository.name }}
            io.k8s.description=${{ github.event.repository.description }}
            io.openshift.tags=minimal rhel8 rabe python nowplaying

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: |
            ${{ steps.meta.outputs.labels }}
            version=${{ steps.meta.outputs.version }}
